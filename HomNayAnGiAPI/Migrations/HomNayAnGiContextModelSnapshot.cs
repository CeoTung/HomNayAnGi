// <auto-generated />
using System;
using HomNayAnGiAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomNayAnGiAPI.Migrations
{
    [DbContext(typeof(HomNayAnGiContext))]
    partial class HomNayAnGiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HomNayAnGiAPI.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IngredientId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Ingredient", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"), 1L, 1);

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MealId");

                    b.ToTable("Meal", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.NutritionFact", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<double?>("Calories")
                        .HasColumnType("float");

                    b.Property<double?>("Carbohydrates")
                        .HasColumnType("float");

                    b.Property<double?>("Fat")
                        .HasColumnType("float");

                    b.Property<double?>("Fiber")
                        .HasColumnType("float");

                    b.Property<double?>("Protein")
                        .HasColumnType("float");

                    b.Property<double?>("Sugar")
                        .HasColumnType("float");

                    b.HasKey("RecipeId")
                        .HasName("NutritionFact_pk");

                    b.ToTable("NutritionFact", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CookTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifficultyLevel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsPublic")
                        .HasColumnType("int");

                    b.Property<int?>("PrepTime")
                        .HasColumnType("int");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Servings")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipe", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.HasKey("CategoryId")
                        .HasName("RecipeCategory_pk");

                    b.HasIndex("CreatedBy");

                    b.ToTable("RecipeCategory", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId")
                        .HasName("RecipeComment_pk");

                    b.HasIndex("ParentCommentId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("RecipeComment", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeIngredientId"), 1L, 1);

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RecipeIngredientId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredient", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeMeal", b =>
                {
                    b.Property<int>("RecipeMealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeMealId"), 1L, 1);

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("RecipeMealId");

                    b.HasIndex("MealId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeMeal", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeStep", b =>
                {
                    b.Property<int>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StepId"), 1L, 1);

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("StepNumber")
                        .HasColumnType("int");

                    b.HasKey("StepId")
                        .HasName("RecipeStep_pk");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeStep", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.SignupOtp", b =>
                {
                    b.Property<string>("SignupRequestId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Otpstring")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("OTPString");

                    b.Property<int>("RequestAttemptsRemains")
                        .HasColumnType("int");

                    b.HasKey("SignupRequestId")
                        .HasName("SignupOTP_pk");

                    b.ToTable("SignupOTP", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.StepImage", b =>
                {
                    b.Property<int>("StepImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StepImageId"), 1L, 1);

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.HasKey("StepImageId");

                    b.HasIndex("StepId");

                    b.ToTable("StepImage", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.UserFavorite", b =>
                {
                    b.Property<int>("UserFavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserFavoriteId"), 1L, 1);

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserFavoriteId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFavorite", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.UserRefreshToken", b =>
                {
                    b.Property<int>("UserRefreshTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRefreshTokenId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DeviceID");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRefreshTokenId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRefreshToken", (string)null);
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.Ingredient", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.User", "CreatedByNavigation")
                        .WithMany("Ingredients")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("Ingredient_User");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.NutritionFact", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.Recipe", "Recipe")
                        .WithOne("NutritionFact")
                        .HasForeignKey("HomNayAnGiAPI.Models.NutritionFact", "RecipeId")
                        .IsRequired()
                        .HasConstraintName("FK_5");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.Recipe", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.RecipeCategory", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("Recipe_RecipeCategory");

                    b.HasOne("HomNayAnGiAPI.Models.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("Recipe_User_UserId_fk");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeCategory", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.User", "CreatedByNavigation")
                        .WithMany("RecipeCategories")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("RecipeCategory_User");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeComment", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.RecipeComment", "ParentComment")
                        .WithMany("InverseParentComment")
                        .HasForeignKey("ParentCommentId")
                        .HasConstraintName("FK_RecipeComment_ParentComment");

                    b.HasOne("HomNayAnGiAPI.Models.Recipe", "Recipe")
                        .WithMany("RecipeComments")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK_8");

                    b.HasOne("HomNayAnGiAPI.Models.User", "User")
                        .WithMany("RecipeComments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_9");

                    b.Navigation("ParentComment");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeIngredient", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK_3");

                    b.HasOne("HomNayAnGiAPI.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .IsRequired()
                        .HasConstraintName("FK_2");

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeMeal", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.Meal", "Meal")
                        .WithMany("RecipeMeals")
                        .HasForeignKey("MealId")
                        .IsRequired()
                        .HasConstraintName("RecipeMeal_Meal");

                    b.HasOne("HomNayAnGiAPI.Models.Recipe", "Recipe")
                        .WithMany("RecipeMeals")
                        .HasForeignKey("RecipeId")
                        .IsRequired()
                        .HasConstraintName("RecipeMeal_Recipe");

                    b.Navigation("Meal");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeStep", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.Recipe", "Recipe")
                        .WithMany("RecipeSteps")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK_4");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.StepImage", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.RecipeStep", "Step")
                        .WithMany("StepImages")
                        .HasForeignKey("StepId")
                        .IsRequired()
                        .HasConstraintName("StepImage_RecipeStep");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.UserFavorite", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.Recipe", "Recipe")
                        .WithMany("UserFavorites")
                        .HasForeignKey("RecipeId")
                        .IsRequired()
                        .HasConstraintName("FK_7");

                    b.HasOne("HomNayAnGiAPI.Models.User", "User")
                        .WithMany("UserFavorites")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_6");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.UserRefreshToken", b =>
                {
                    b.HasOne("HomNayAnGiAPI.Models.User", "User")
                        .WithMany("UserRefreshTokens")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("UserRefreshToken_User_fk");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.Meal", b =>
                {
                    b.Navigation("RecipeMeals");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.Recipe", b =>
                {
                    b.Navigation("NutritionFact");

                    b.Navigation("RecipeComments");

                    b.Navigation("RecipeIngredients");

                    b.Navigation("RecipeMeals");

                    b.Navigation("RecipeSteps");

                    b.Navigation("UserFavorites");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeCategory", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeComment", b =>
                {
                    b.Navigation("InverseParentComment");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.RecipeStep", b =>
                {
                    b.Navigation("StepImages");
                });

            modelBuilder.Entity("HomNayAnGiAPI.Models.User", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("RecipeCategories");

                    b.Navigation("RecipeComments");

                    b.Navigation("Recipes");

                    b.Navigation("UserFavorites");

                    b.Navigation("UserRefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
